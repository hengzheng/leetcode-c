char* numToChar(int num)
{
    switch (num) {
        case 1 :
            return "I";
        case 5 :
            return "V";
        case 10 :
            return "X";
        case 50 :
            return "L";
        case 100 :
            return "C";
        case 500 :
            return "D";
        case 1000 :
            return "M";
        case 4 :
            return "IV";
        case 9 :
            return "IX";
        case 40 :
            return "XL";
        case 90 :
            return "XC";
        case 400 :
            return "CD";
        case 900 :
            return "CM";
        default :
            return "";
    }
}

char* intToRoman(int num) {
    char * p;
    int n = 1000;
    char * tmp = (char *) malloc(2 * sizeof(char));
    while (num > 0) {
        int rem = num / n;
        if (rem > 0) {
            tmp = numToChar(rem*n);
            if  (strlen(tmp) == 0) {
                if (rem > 5) {
                    tmp = numToChar(5*n);
                    p = (char *) realloc(p, strlen(tmp) * sizeof(char));
                    strcat(p, tmp);
                }
                tmp = numToChar(1*n);
                int j = rem > 5 ? rem - 5 : rem;
                p = (char *) realloc(p, strlen(tmp) * j * sizeof(char));
                for (int i = 0; i < j; i++) {
                    strcat(p, tmp);
                }
            }
            else {
                p = (char *) realloc(p, strlen(tmp) * sizeof(char));
                strcat(p, tmp);
            }
        }
        num = num % n;
        n = n / 10;
    }
    return p;
}
